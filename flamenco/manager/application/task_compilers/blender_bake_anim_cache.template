import os
import bpy
'''import sys, argparse

# ignore default blender args before '--'
def script_args():
    argv = []
    found_sep = False
    for v in sys.argv:
        if found_sep:
            argv.append(v)
        if v == "--":
            found_sep = True
    if found_sep:
        return argv
    else:
        return sys.argv

def parse_script_args():
    parser = argparse.ArgumentParser(description='Bake animation caches')
    parser.add_argument('--cache-output', default="", help='Path of the animation cache output')
    return parser.parse_args(script_args())
'''
# -----------------------------------------------------------------------------

def bake_object(ob, cache_output):
    cachelib = ob.cache_library
    if not cachelib:
        return

    cachelib.output_filepath = cache_output
    cachelib.display_mode = 'RESULT'

    override = bpy.context.copy()
    override['cache_library'] = cachelib
    override['active_object'] = ob

    # TODO Add use_job property
    bpy.ops.cachelibrary.bake(override, 'EXEC_DEFAULT', use_job=False)
    # bpy.ops.cachelibrary.bake(override, 'EXEC_DEFAULT')

# -----------------------------------------------------------------------------

# args = parse_script_args()

bpy.ops.file.report_missing_files()

for obj in bpy.context.selected_objects:
    if obj.cache_library:
        cache_output = os.path.join(os.environ.get('WORKER_OUTPUTPATH'),
            obj.name)
        bake_object(obj, cache_output)
