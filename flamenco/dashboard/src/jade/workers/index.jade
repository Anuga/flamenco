| {% extends "layout.html" %}
| {% block nav %}
ul.nav.navbar-nav.navbar-left
	span.navbar-brand
		a(href="{{url_for('workers.index')}}") Workers
	li
		.btn-group.navbar-btn(role="group" aria-label="...")
			button#workers-enable.btn.btn-default(type="button", status="enabled").
				Enable
			button#workers-disable.btn.btn-default(type="button", status="disabled").
				Disable

		.btn-group.navbar-btn(role="group" aria-label="...")
			button.btn.btn-default.disabled(type="button").
				Restart
			button.btn.btn-default.disabled(type="button").
				Delete

| {% endblock %}

| {% block body %}

.row
	.col-md-12
		table#workers.table.table-striped.table-condensed.table-hover(cellpadding="0", cellspacing="0", border="0")
			thead
				tr
					th(width="1%")
						input.check-all(type="checkbox")
					th Hostname
					th System
					th IP Address
					th Connection
					th Status
					th Manager ID
			tbody
			tfoot
				tr
					th
					th Hostname
					th System
					th IP Address
					th Connection
					th Status
					th Manager ID

| {% endblock %}

| {% block footer_scripts %}
script.
	$(document).ready(function() {
	    var workersTable = $('#workers').DataTable({
	        "ajax": "{{url_for('workers.index_json')}}",
	        "iDisplayLength": 50,
	        "order": [[ 1, "desc" ]],
	        "columnDefs": [
	            // {
	            //   // We hide the total time
	            //   "targets": [8,11],
	            //   "visible": false
	            // },
	            {
	              "targets": [0,],
	              "sortable": false
	            }
	        ],
	        "columns": [
	        /*  0 */ {"data": "checkbox"},
	        /*  1 */ {"data": "hostname"},
	        /*  2 */ {"data": "system"},
	        /*  3 */ {"data": "ip_address"},
	        /*  4 */ {"data": "connection"},
	        /*  5 */ {"data": "status"},
	        /*  6 */ {"data": "manager_id"},
	        ],


	        "fnRowCallback": function( row, data, iDisplayIndex, iDisplayIndexFull ) {
	            // Connection
	            if (data.connection == "offline"){
	                $('td', row).eq(4).html('<span class="label label-danger">offline</span>');
	            } else if (data.connection == "online"){
	                $('td', row).eq(4).html('<span class="label label-success">online</span>');
	            }


	            //$('td', row).eq(2).html(data[7]);

	            var worker_status_label = '';
	            if (data.status === 'enabled') {
	              worker_status_label = '<span class="label label-success">' + data.status + '</label>';
	            } else if (data.status === 'disabled'){
	              worker_status_label = '<span class="label label-warning">' + data.status + '</label>';
	            } else if (data.status === 'busy') {
	              worker_status_label = '<span class="label label-info">' + data.status + '</label>';
	            } else if (data.status === 'rendering') {
	              worker_status_label = '<span class="label label-info">' + data.status + '</label>';
	            }
	            // Status
	            $('td', row).eq(5).html(worker_status_label);

	            $('td', row).eq(1).html('<a href="/workers/view/' + data.id + '"> ' + data.hostname + ' </a>');
	        }

	    });

	    $("div.toolbar").html('Custom tool bar! Text/images etc.');


	    $(document).on("click", "#workers-enable, #workers-disable", function() {

	        // var data = null;
	        // $.getJSON("{{url_for('workers.index_json')}}", function( json ) {
	        //     console.log( "JSON Data: " + json.data );
	        //     data = json.data;
	        // });
	        // //data = data['data'];
	        // console.log(data);

	        var data = workersTable.data();

	        workersTable.data().each( function (d) {
	            console.log(d.status);
	        });

	        var workers = new Array();

	        var checkbox_list = $( "tbody input:checked" );
	        for (var i = checkbox_list.length - 1; i >= 0; i--) {
	            var checkbox = checkbox_list[i];
	            workers.push($(checkbox).val());
	        };

	        if (workers.length == 0) {
	          $.growl("Please select one or more workers", {
	            type: "warning"
	          });
	            return false;
	        };

	        workers_ids = workers.join();

	        status = $(this).attr('status');
	        params = { 'id' : workers_ids, 'status' : status}

	        $.post("/workers/edit", params)
	            .done(function(data_fun) {
	                // console.log('Workers ' + workers_ids + ' updated : ' + status);


	                worker_names = [];
	                for (var i = 0; i < workers.length; i++) {
	                    workersTable.rows().every( function () {
	                        var d = this.data();
	                        id = d.id + ';' + d.manager_id;
	                        if (id == workers[i]) {
	                            d.status = status;
	                            worker_names.push(d.hostname);
	                            this.invalidate();
	                        }
	                    });
	                };
	                workersTable.draw();
	                $.growl('Workers ' + worker_names + ' ' + status);
	        });
	    });

	    $(document).on("click", ".check-all", function(){
	        $("table input[type=checkbox]").attr('checked', $(this).is(':checked'));
	    });

	});

| {% endblock %}
